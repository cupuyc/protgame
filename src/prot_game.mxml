<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   minWidth="955" minHeight="600" creationComplete="onCreationComplete(event)">

	<fx:Script>
		<![CDATA[
			import com.adobe.serialization.json.JSONEncoder;
			import com.trembit.protgame.model.GameModel;
			import com.trembit.protgame.util.WebService;
			
			import mx.events.FlexEvent;
			import mx.utils.ObjectUtil;
			
			import org.spicefactory.lib.task.SequentialTaskGroup;
			import org.spicefactory.lib.task.Task;


			[Bindable]
			public var gameModel:GameModel=new GameModel();

			protected function onCreationComplete(event:FlexEvent):void
			{
				var taskList:Array = [];
				
				taskList.push(new WebService("tiles", URLRequestMethod.DELETE, null));

				taskList.push(new WebService("tiles", URLRequestMethod.PUT, ""));

				taskList.push(new WebService("players", URLRequestMethod.DELETE, null));

				taskList.push(new WebService("players", URLRequestMethod.PUT, ""));

				const size : uint = 5;
				var xCount : int = size;
				var yCount : int = size;
				var tiles : Array = [];
				while (xCount >= 0) {
					while (yCount >= 0) {
						tiles.push({_id:String(xCount + ":" + yCount),x:xCount, y:yCount});
						yCount--;
					}
					xCount--;
					yCount = size;
				}

				var batchCreateBytes : ByteArray = new ByteArray();
				batchCreateBytes.writeUTFBytes(new JSONEncoder({docs:tiles}).getString());
				batchCreateBytes.position = 0;
				taskList.push(new WebService("tiles/_bulk_docs", URLRequestMethod.POST, batchCreateBytes));
				// END INIT
				
				//taskList.push(new WebService("players/_bulk_docs", URLRequestMethod.POST, batchCreateBytes));


				var task:SequentialTaskGroup=new SequentialTaskGroup();
				for each (var subTask:Task in taskList)
				{
					task.addTask(subTask);
				}
				task.start();
			}
		]]>
	</fx:Script>

</s:Application>
